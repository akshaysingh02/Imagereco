{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecoginition/FaceRecognition.js","components/SignIn/SignIn.js","App.js","serviceWorker.js","index.js","components/Logo/Logo-main.png"],"names":["Navigation","onRouteChange","style","display","justifyContent","onClick","className","zIndex","Logo","options","max","height","width","src","Logomain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","for","name","value","href","app","Clarifai","App","apiKey","particleOption","particles","number","size","interactivity","events","onhover","enable","mode","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.146110fe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onRouteChange}) =>{\n    return(\n        <nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\n            <p onClick ={ () => onRouteChange('signin')}\n            className = 'f3 link dim black pa3 pointer'\n            style = {{zIndex:'0'}}>Sign Out</p>\n        </nav>\n    )\n}\n\nexport default Navigation;","import React from \"react\";\nimport Logomain from './Logo-main.png'\nimport \"./Logo.css\";\nimport Tilt from \"react-tilt\";\n\nconst Logo = () => {\n  return (\n    <div className=\"ma3 mt\">\n      <Tilt\n        className=\"Tilt br2 shadow-2\"\n        options={{ max: 45 }}\n        style={{ height: 100, width: 100 }}\n      >\n        <div className=\"Tilt-inner\">\n          <img src={Logomain} style ={{}} alt ='Logo'/>\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\n  return (\n    <div>\n     <p className='f3'>\n         {'This reco dude recognise faces in the picture you give'}\n     </p>\n     <div className='center'>\n        <div className='center form pa4 br3 shadow-5'>\n         <input type='tex' className='f4 pa2 w-70 center' onChange={onInputChange}/>\n         <button className ='w-30 grow f4 ph3 pv2 dib white bg-light-purple btn-detect' onClick={onButtonSubmit}>Detect</button>\n         </div>\n     </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nconst Rank = () => {\n  return (\n    <div>\n      <div className=\"white f3\">\n          {'Akshay your current rank is.....'}\n      </div>\n      <div className=\"white f1\">\n          {'#5'}\n      </div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport './FaceRecoginition.css';\nconst FaceRecognition = ({ imageUrl,box }) => {\n  return (\n    <div className=\"center ma\">\n      <div className = 'absolute mt4'>\n        <img id='inputImage' alt=\"\" src={imageUrl} style={{ zIndex: \"0\" }} width='400px' height ='auto' />\n        <div className = 'bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\n\nconst SignIn = ({onRouteChange}) => {\n  return(\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 center shadow-5\" style={{zIndex:'0'}}>\n        <main className=\"pa4 black-80\" style={{zIndex:'0'}}>\n            <form className=\"measure /\">\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 \" style={{zIndex:'0'}}>\n                    <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n                    </div>\n                        <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n                    </div>\n                </fieldset>\n                <div className=\"\" style={{zIndex:'0'}}>\n                    <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\"\n                    value=\"Sign in \"\n                    onClick={() => onRouteChange('home')} />\n                </div>\n                <div className=\"lh-copy mt3\" style={{zIndex:'0'}}>\n                    <a href=\"#0\" className=\"f6 link dim black db\">Register</a>\n                </div>\n            </form>\n         </main>\n    </article>\n  );\n}\n\nexport default SignIn;","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecoginition/FaceRecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport \"tachyons\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"e29027aef5654c768845d9814a7fe79a\",\n});\n\nconst particleOption = {\n  particles: {\n    number: {\n      value: 250,\n    },\n    size: {\n      value: 2,\n    },\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\",\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box:{},\n      route: 'signin'\n    };\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row*height),\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    console.log(box);\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err))\n  };\n\n  onRouteChange = (route) =>{\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles params={particleOption} className=\"particle\" />\n        <Navigation onRouteChange = {this.onRouteChange}/>\n        <Logo />\n        { this.state.route === 'signin' ?\n        <SignIn onRouteChange = {this.onRouteChange}/>\n        : <div>\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition box = {this.state.box} imageUrl={this.state.imageUrl} />\n          </div>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo-main.a3e4819a.png\";"],"sourceRoot":""}